@model ElasticSearchProject.Models.Property 

@{
	ViewData["Title"] = "View";
}  

<h1>View</h1>

<div>
 <h4>Property</h4>
 <hr />
 <dl class="row">
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.propertyID)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.propertyID)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Name)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.Name)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.FormerName)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.FormerName)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.StreetAddress)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.StreetAddress)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.City)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.City)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Market)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.Market)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.State)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.State)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Lat)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.Lat)
  </dd>
  <dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Lng)
  </dt>
  <dd class="col-sm-10">
			@Html.DisplayFor(model => model.Lng)
  </dd>
 </dl>
</div>
  
<div id='map' class='map' style="height:500px;width:100%;"></div>
<script src='https://api.tomtom.com/maps-sdk-for-web/cdn/5.x/5.53.0/maps/maps-web.min.js'></script> 
 @section Scripts {

    <script>

        let map;
		let itemCoordinates = [@Model.Lng.ToString().Replace(',','.'), @Model.Lat.ToString().Replace(',','.')];
        map = tt.map({

            key: '@TempData["MyTomTomKey"]',

            container: 'map',

            zoom: 15,

            center: itemCoordinates,

            style: 'tomtom://vector/1/basic-main'

        });
		var marker = new tt.Marker().setLngLat(itemCoordinates).addTo(map);

		var popupOffsets = {
			  top: [0, 0],
			  bottom: [0, -70],
			  'bottom-right': [0, -70],
			  'bottom-left': [0, -70],
			  left: [25, -35],
			  right: [-25, -35]
			}
			
		var popup = new tt.Popup({offset: popupOffsets}).setHTML("<b>@Model.Name</b><br/>@Model.StreetAddress");
		marker.setPopup(popup).togglePopup();
    </script>

}

<div>
 <a asp-controller="Home" asp-action="Index">Back to List</a>
</div>
