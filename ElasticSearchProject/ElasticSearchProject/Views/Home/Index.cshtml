@using System.Text.RegularExpressions;
@{
	ViewData["Title"] = "Search Page";
}
@model PageModel<Property>

<form asp-controller="Home" asp-action="Index" method="get">
 <div class="container">
  <div class="row">
   <div class="col-md-12">
	<div class="input-group">
	 <input type="text" name="query" placeholder="Search query" class="form-control" value="@Model.Query">
	 <span class="input-group-btn">
	  <input type="submit" name="submitButton" value="Search" class="btn btn-primary" data-disable-with="Search">
	 </span>
	 <span class="input-group-btn">
	  <button tabindex="-1" data-toggle="dropdown" class="btn btn-default dropdown-toggle" type="button">
	   <span class="caret">Filters</span>
	  </button>
	  <ul role="menu" class="dropdown-menu">
							@foreach (var kvp in Model.Filters)
							{
		   <li class="dropdown-item"> 
			   @Html.CheckBox("Filters[" + kvp.Key + "]", kvp.Value, new { @class = "form-check-inline"})
				<span class="lbl">@string.Join(" ", Regex.Split(kvp.Key, "(?=[A-Z])"))</span>
		   </li>
							}
	  </ul>
	 </span>
	</div>
   </div>
  </div>
  <hr>
 </div>

	@if (Model.Data.Documents.Any())
	{

	 <table class="table table-striped table-bordered table-hover">
	  <tr>
	   <td colspan="5">
		<h3>Search Results</h3>
					@foreach (var property in Model.Data.Documents)
					{
		  <tr>
		   <td>
								@property.PropertyId
		   </td>
		   <td>
								@property.Name
		   </td>
		   <td class="text-right">
								@property.StreetAddress
		   </td>
		   <td class="text-right">
								@property.City
		   </td>
		   <td class="text-center">
			<a asp-controller="Property" asp-action="View" asp-route-id="@property.PropertyId" class="btn btn-sm btn-info">Open</a>
		   </td>
		  </tr>
					}
	 </table>

	 <div>
	  <ul class="pagination">
				@if (Model.ShowPrevious)
				{
		   <li class="page-item"> 
			   <input type="submit" name="submitButton" value="Previous" class="page-link">
			 
		   </li>
				}

	   <li class="page-item">
		 <input type="number" step="1" max="@Model.TotalPages" class="page-link" name="pagenumber"  value="@Model.CurrentPage">
	   </li>

	   <li class="page-item">
			   <input type="submit" name="submitButton" value="Select Page" class="page-link"  >
	   </li>
				@if (Model.ShowNext)
				{
		   <li class="page-item">  
			   <input type="submit" name="submitButton" value="Next" class="page-link"  >
			 
		   </li>
				}
	   <li class="page-item">
		<p class="page-link">@Model.TotalPages</p>
	   </li>
	  </ul>
	 </div>

	}
	else
	{
	 <h3>No Results</h3>

	}

</form>

